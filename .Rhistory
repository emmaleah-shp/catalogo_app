library(readxl)
pacman::p_load(tidyselect, tidyverse, dplyr, glue, knitr, stringr, magrittr,
sf, ggmap, ggplot2, flextable, data.table, sp, readxl, janitor,
scales, devtools, tinytex, writexl, webshot, readr)
require(stringr)
require(sf)
# setwd("D:/catalogo_datamet_flujo_de_capas")
path<-"D:/catalogo_datamet_flujo_de_capas/catalogo_v4.gdb"
shps1 <-st_layers(glue("{path}"))$name
shps1<-sort(shps1)
shps<-shps1 %>% tibble()
names(shps)<-"nombre_capa"
shps<-shps[order(shps$nombre_capa), ]
View(shps)
shps<-shps[-23,]  # CHECK IF STILL NECESSARY
shps1
# There is an extra capa that they have eliminated but which is still in the GDB
shps1<-shps1[-23]
shps<-shps1 %>% tibble()
names(shps)<-"nombre_capa"
shps<-shps[order(shps$nombre_capa), ]
View(shps)
### FUENTE 2: Read the fichas in the GDB ------------------------------------------------
fichas<- readxl::read_xlsx("C:/Users/Elite Center/OneDrive/Documents/OCUC/procesamiento_catalogo/03_datos_fichas_catalogo2023_06_29.xlsx", sheet = 1)
View(fichas)
View(fichas)
### FUENTE 2: Read the fichas, which contains all capas and their columns ---------------
fichas_og<- readxl::read_xlsx("C:/Users/Elite Center/OneDrive/Documents/OCUC/procesamiento_catalogo/03_datos_fichas_catalogo2023_06_29.xlsx", sheet = 1)
fichas<-fichas_og[,c(4,14,1:3,5:13, 15:25)]
### FUENTE 2: Read the fichas, which contains all capas and their columns ---------------
fichas_og<- readxl::read_xlsx("C:/Users/Elite Center/OneDrive/Documents/OCUC/procesamiento_catalogo/03_datos_fichas_catalogo2023_06_29.xlsx", sheet = 1)
fichas<-fichas_og[,c(4,14,1:3,5:13, 15:25)]
fichas_og<-fichas_og[,c(4,14,1:3,5:13, 15:25)]
fichas<-fichas_og %>% group_by(nombre_shp, nombre_capa) %>% dplyr::summarise(n())
View(fichas)
View(fichas)
fichas<-fichas[,-3]
fichas$nombre_shp_l<-str_to_lower(fichas$nombre_shp)
rm(fichas_og)
View(fichas)
View(fichas)
fichas<-arrange(fichas,nombre_capa)
View(fichas)
fichas<-fichas[-23,] # CHECK IF STILL NECESSARY
View(fichas)
### FUENTE 3: Read the cat치logo, which contains descriptions,  ---------------
# "C:/Users/Elite Center/OneDrive/Documents/OCUC/catalogo_v4.xlsx""catalogo_v4.1.xlsx"
cata<- readxl::read_xlsx("C:/Users/Elite Center/OneDrive/Documents/OCUC/procesamiento_catalogo/catalogo_v4.1.xlsx", sheet = 1)
View(cata)
View(cata)
View(cata)
names(cata)<-make_clean_names(names(cata))
cata<-cata %>% filter(calidad=="Id칩neo")
View(cata)
cata<-cata[,-22]
write_csv(fichas, "D:/catalogo_datamet_flujo_de_capas/fichas_capas.csv")
cata$calidad<-str_replace_all(cata$calidad, "suficiente", "Suficiente")
cata$calidad<-str_to_lower(cata$calidad)
cata$ambito<-str_to_lower(cata$ambito)
cata<-cata %>%
mutate(amb = case_when(
grepl("informaci칩n base", ambito) ~ "BAS",
grepl("medio ambiente", ambito) ~ "MED",
grepl("movilidad", ambito) ~ "MOV",
grepl("planificaci칩n", ambito) ~ "PLA",
grepl("riesgos y emergencias", ambito) ~ "RIE",
grepl("seguridad", ambito) ~ "SEG",
TRUE ~ NA_character_  # Default value if no conditions match
))
View(cata)
library(stringi)
cata<-cata[,c(7,1:6, 8:22)]
View(cata)
cata<-cata[order(cata$nombre_del_shape), ]
View(cata)
cata<-cata[-c(1, 44),]  # CHECK IF STILL NECESSARY
names(cata)[1]<-"nombre_shp_catalogo"
cata$nombre_shp_catalogo<-str_remove_all(cata$nombre_shp_catalogo, ".shp") %>% str_squish()
cata$nombre_shp_l<-str_to_lower(cata$nombre_shp_catalogo)
write_csv(cata, "D:/catalogo_datamet_flujo_de_capas/catalogo_limpio.csv")
cata_ficha<-left_join(cata,fichas, by="nombre_shp_l")
cata_ficha<-cata_ficha[order(cata_ficha$nombre_capa), ]
# 0. packages ----
library(tidyverse)
library(janitor)
library(writexl)
library(readxl)
# 1. importar bd etiquetas geoda ----
etiquetas <- read_excel("C:/Users/Elite Center/OneDrive/Documents/OCUC/procesamiento_catalogo/Segmentos codificados.xlsx") |>
clean_names()
# 2. crear columnas con: nombre shp, nombre dato y definicion
etiquetas <- etiquetas |>
mutate(nombre_shp = str_squish(str_split_i(string = segmento,
pattern = "\\s\\*{3}\\s",
i = 1)),
nombre_dato = str_squish(str_split_i(string = segmento,
pattern = "\\s\\*{3}\\s",
i = 2)),
definicion = str_squish(str_split_i(string = segmento,
pattern = "\\s\\*{3}\\s",
i = 3)))
# 3. crea tabla forma wide binaria ----
## cada fila es una capa y cada columna una etiqueta
## 1: indica que la capa tiene una etiqueta, 0: que no posee
etiquetas_wide <- etiquetas |>
select(nombre_shp, codigo) |>
mutate(flag = 1) |>
pivot_wider(id_cols = nombre_shp,
names_from = codigo,
values_from = flag,
values_fn = ~ length(.x)) |>
mutate(
across(
.cols = 2:last_col(),
.fns = ~ replace_na(.x, replace = 0)
)
) |>
mutate(
across(
.cols = 2:last_col(),
.fns = ~ case_when(.x >= 1 ~ 1, TRUE ~ .x)
)
)
# "C:/Users/Elite Center/OneDrive/Documents/OCUC/procesamiento_catalogo/"
etiquetas_wide$nombre_shp_l<-str_to_lower(etiquetas_wide$nombre_shp)
names(etiquetas_wide)[1]<-"nombre_shp_etiquetas"
etiquetas_wide<-etiquetas_wide[order(etiquetas_wide$nombre_shp_etiquetas), ]
View(etiquetas_wide)
etiquetas_wide<-etiquetas_wide[-c(1,76),] # CHECK IF STILL NECESSARY
write_csv(etiquetas_wide, "D:/catalogo_datamet_flujo_de_capas/etiquetas.csv")
### FUENTE 4: Read the etiquetas --------------------------------------------------------------------------------------
etiquetas<- read.csv("D:/catalogo_datamet_flujo_de_capas/etiquetas.csv")
View(etiquetas)
combinacion<-left_join(cata_ficha,etiquetas, by="nombre_shp_l")
View(combinacion)
combinacion<-combinacion[,c(1, 26, 23:25, 22, 2:21,27:56)]
View(combinacion)
View(combinacion)
names(combinacion)[4]<-"nombre_shp_fichas"
View(combinacion)
View(combinacion)
combinacion<-combinacion[,c(3,5:56, 4,1,2)]
View(combinacion)
##### EXPORT ----------------------------------------------------------------
# write_csv(cata_ficha, "C:/Users/Elite Center/OneDrive/Documents/OCUC/procesamiento_catalogo/catalogo_fichas.csv")
write_csv(combinacion, "D:/catalogo_datamet_flujo_de_capas/combinacion_clave.csv")
rm(cata,cata_ficha, fichas, etiquetas_wide, etiquetas)
pacman::p_load(tidyselect, tidyverse, dplyr, glue, knitr, stringr, magrittr,
sf, ggmap, ggplot2, flextable, data.table, sp, readxl, janitor,
scales, devtools, tinytex, writexl, webshot, readr)
require(stringr)
require(sf)
setwd("D:/catalogo_datamet_flujo_de_capas/data")
### FUENTE 1: Read the layers in the GDB ------------------------------------------------------------------------------
path<-"D:/catalogo_datamet_flujo_de_capas/catalogo_v4.gdb"
shps1 <-st_layers(glue("{path}"))$name
shps1<-sort(shps1)
# There is an extra capa that they have eliminated but which is still in the GDB
shps1<-shps1[-23]
shps<-shps1 %>% tibble()
names(shps)<-"nombre_capa"
shps<-shps[order(shps$nombre_capa), ]
setwd("D:/catalogo_datamet_flujo_de_capas")
setwd("D:/catalogo_datamet_flujo_de_capas")
### FUENTE 1: Read the layers in the GDB ------------------------------------------------------------------------------
gdb<-"catalogo_v4.gdb"
shps1 <-st_layers(glue("{gdb}"))$name
shps1<-sort(shps1)
# There is an extra capa that they have eliminated but which is still in the GDB
shps1<-shps1[-23]
shps<-shps1 %>% tibble()
names(shps)<-"nombre_capa"
shps<-shps[order(shps$nombre_capa), ]
amb <- str_extract(shps1, "^\\w{3}")
amb <- amb %>%
str_replace_all("MOV", "movilidad") %>%
str_replace_all("BAS", "informacion_base") %>%
str_replace_all("SEG", "seguridad") %>%
str_replace_all("RIE", "riesgos_y_emergencias") %>%
str_replace_all("PLA", "planificacion") %>%
str_replace_all("MED", "medio_ambiente")
